<?php

namespace EVPOS\affectationBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * PosteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PosteRepository extends EntityRepository {
    /**
     * Retourne la liste de tous les postes
     */
    public function getPostes() {
        $query = $this->createQueryBuilder('p')
            ->orderBy('p.hostname')
            ->getQuery()
        ;

        return $query->getResult();
    }
    
    /**
     * Retourne la liste de tous les postes
     */
    public function getPostesPages($page, $nbParPage) {
        $query = $this->createQueryBuilder('p')
            ->orderBy('p.hostname')
            ->getQuery()
        ;

        $query
            ->setFirstResult(($page-1) * $nbParPage)
            ->setMaxResults($nbParPage)
        ;
        
        return new Paginator($query, true);
    }    
    
    /**
     * Retourne la liste de tous les postes et de leurs utilisateurs
     */
    public function getPostesUtil() {
        $query = $this->createQueryBuilder('p')
            ->leftJoin('p.listeUtilisateurs', 'u')
            ->addSelect('u')
            ->orderBy('p.hostname')
            ->getQuery()
        ;

        return $query->getResult();
    }
    
    /**
     * Retourne la liste des postes de postes sur lesquels sont installÃ©es des applications
     */
    public function getPosteUtilisateursAppli() {
        $query = $this->createQueryBuilder('p')
            ->leftJoin('p.listeUtilisateurs', 'u')
            ->addSelect('u')
            ->leftJoin('p.listeUo', 'uo')
            ->addSelect('uo')
            ->where('uo is not null and u is not null')
            ->getQuery()
        ;
        
        return $query->getResult();
    }
}
