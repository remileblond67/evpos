<?php

namespace EVPOS\affectationBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * HistoUoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HistoUoRepository extends EntityRepository {
  // Retourne l'historique général d'intégration des UO
  public function getHisto($nature, $niveau) {
    $query=$this->createQueryBuilder('h')
    ->select('h.dateMesure dateMesure, h.avancement, h.nbUo')
    ->setParameter('niveau', $niveau)
    ->setParameter('nature', $nature)
    ->where('h.natureAppli = :nature and h.niveau = :niveau')
    ->orderBy('h.dateMesure', 'ASC')
    ->getQuery()
    ;

    $listeDate = [];

    foreach ($query->getResult() as $ligne) {
      $date = date_format($ligne["dateMesure"], "d/m/Y");

      if (in_array($date, $listeDate) !== true) {
        $etat[$date]['4. En production'] = 0;
        $listeDate[] = $date;
      }
      $etat[$date][$ligne["avancement"]] = $ligne["nbUo"];
    }
    return $etat;
  }

  // Retourne l'historique du nombre d'UO intégrées par semaine
  public function getHistoUoSemaine() {
    $query=$this->createQueryBuilder('h')
    ->select('h.dateMesure dateMesure, max(h.nbUo) nbUo')
    ->where("h.niveau = 'general' and h.avancement = '3. Validé'")
    ->groupBy('h.dateMesure')
    ->orderBy('h.dateMesure')
    ->getQuery()
    ;
    $nbSemaine = [];

    foreach ($query->getResult() as $ligne) {
      $semaine = date_format($ligne["dateMesure"], "Y-W");
      $nbSemaine[$semaine] = $ligne["nbUo"];
    }
    $old = 0;

    $resultSemaine = [];
    foreach (array_keys($nbSemaine) as $key) {
      $nbPoste = intval($nbSemaine[$key]);
      $resultSemaine[$key]["nb"] = $nbUo;
      if ($old == 0) {
        $resultSemaine[$key]["diff"] = 0;
      } else {
        $resultSemaine[$key]["diff"] = $nbUo - $old;
      }
      $old = $nbUo ;
    }
    return $resultSemaine;
  }
}
